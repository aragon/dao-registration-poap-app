---
name: client-build

on:
  workflow_dispatch:
  push:
    branches:
      - 'develop'
      - 'main'
      - 'DOPS-449*' ## temporal branch for testing only
    paths-ignore:
      # - 'README.md'
      - 'Dockerfile*'
      - '.env'
      - '.env.local'
      - '.vscode'
      - '.dockerignore'
      - 'docker.env'
      - '.github/**'

jobs:
  setup-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run e2e tests
        if: github.ref == 'refs/heads/test'
        run: npm run test:e2e

  docker-release:
    runs-on: ubuntu-latest
    needs: setup-and-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get branch name, git commit hash and current time in secs
        id: vars
        env:
          TEST_VAR: 'test env var'
        run: |
          branchname=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )
          echo "BRANCH_NAME=$branchname" >> $GITHUB_OUTPUT
          echo "GIT_HASH_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "DATE_IN_SECS=$(date +%s)" >> $GITHUB_OUTPUT
          if [ "$branchname" = "develop" ]; then
            echo "CURRENT_ENVIRONMENT=development" >> $GITHUB_OUTPUT
          elif [ "$branchname" = "main" ]; then
            echo "CURRENT_ENVIRONMENT=production" >> $GITHUB_OUTPUT
          else
            echo "BRANCH_NAME=test" >> $GITHUB_OUTPUT
            echo "CURRENT_ENVIRONMENT=testing" >> $GITHUB_OUTPUT
          fi

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
          tags: |
            type=sha,event=branch,prefix=commit-,format=short,enable=${{ github.ref_type != 'tag' }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.prod
          build-args: |
            COMMIT_SHA=${{ steps.vars.outputs.GIT_HASH_SHORT }}
            ENVIRONMENT=${{ steps.vars.outputs.CURRENT_ENVIRONMENT }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.meta.outputs.tags }}
            ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.BRANCH_NAME }}
            ghcr.io/${{ github.repository }}:${{ steps.vars.outputs.BRANCH_NAME }}-${{ steps.vars.outputs.DATE_IN_SECS }}
          labels: ${{ steps.meta.outputs.labels }}
